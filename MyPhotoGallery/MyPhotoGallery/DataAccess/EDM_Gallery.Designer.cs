//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("GalleryModel", "FK_Comments_Photos", "Photos", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MyPhotoGallery.DataAccess.Photos), "Comments", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MyPhotoGallery.DataAccess.Comments), true)]

#endregion

namespace MyPhotoGallery.DataAccess
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class GalleryEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new GalleryEntities object using the connection string found in the 'GalleryEntities' section of the application configuration file.
        /// </summary>
        public GalleryEntities() : base("name=GalleryEntities", "GalleryEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new GalleryEntities object.
        /// </summary>
        public GalleryEntities(string connectionString) : base(connectionString, "GalleryEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new GalleryEntities object.
        /// </summary>
        public GalleryEntities(EntityConnection connection) : base(connection, "GalleryEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Comments> Comments
        {
            get
            {
                if ((_Comments == null))
                {
                    _Comments = base.CreateObjectSet<Comments>("Comments");
                }
                return _Comments;
            }
        }
        private ObjectSet<Comments> _Comments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Photos> Photos
        {
            get
            {
                if ((_Photos == null))
                {
                    _Photos = base.CreateObjectSet<Photos>("Photos");
                }
                return _Photos;
            }
        }
        private ObjectSet<Photos> _Photos;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Comments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToComments(Comments comments)
        {
            base.AddObject("Comments", comments);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Photos EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPhotos(Photos photos)
        {
            base.AddObject("Photos", photos);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GalleryModel", Name="Comments")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Comments : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Comments object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="photoId">Initial value of the photoId property.</param>
        /// <param name="name">Initial value of the name property.</param>
        /// <param name="text">Initial value of the text property.</param>
        public static Comments CreateComments(global::System.Int32 id, global::System.Int32 photoId, global::System.String name, global::System.String text)
        {
            Comments comments = new Comments();
            comments.id = id;
            comments.photoId = photoId;
            comments.name = name;
            comments.text = text;
            return comments;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 photoId
        {
            get
            {
                return _photoId;
            }
            set
            {
                OnphotoIdChanging(value);
                ReportPropertyChanging("photoId");
                _photoId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("photoId");
                OnphotoIdChanged();
            }
        }
        private global::System.Int32 _photoId;
        partial void OnphotoIdChanging(global::System.Int32 value);
        partial void OnphotoIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String text
        {
            get
            {
                return _text;
            }
            set
            {
                OntextChanging(value);
                ReportPropertyChanging("text");
                _text = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("text");
                OntextChanged();
            }
        }
        private global::System.String _text;
        partial void OntextChanging(global::System.String value);
        partial void OntextChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GalleryModel", "FK_Comments_Photos", "Photos")]
        public Photos Photos
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Photos>("GalleryModel.FK_Comments_Photos", "Photos").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Photos>("GalleryModel.FK_Comments_Photos", "Photos").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Photos> PhotosReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Photos>("GalleryModel.FK_Comments_Photos", "Photos");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Photos>("GalleryModel.FK_Comments_Photos", "Photos", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GalleryModel", Name="Photos")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Photos : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Photos object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="postingDate">Initial value of the postingDate property.</param>
        /// <param name="title">Initial value of the title property.</param>
        /// <param name="fileName">Initial value of the fileName property.</param>
        public static Photos CreatePhotos(global::System.Int32 id, global::System.DateTime postingDate, global::System.String title, global::System.String fileName)
        {
            Photos photos = new Photos();
            photos.id = id;
            photos.postingDate = postingDate;
            photos.title = title;
            photos.fileName = fileName;
            return photos;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime postingDate
        {
            get
            {
                return _postingDate;
            }
            set
            {
                OnpostingDateChanging(value);
                ReportPropertyChanging("postingDate");
                _postingDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("postingDate");
                OnpostingDateChanged();
            }
        }
        private global::System.DateTime _postingDate;
        partial void OnpostingDateChanging(global::System.DateTime value);
        partial void OnpostingDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String title
        {
            get
            {
                return _title;
            }
            set
            {
                OntitleChanging(value);
                ReportPropertyChanging("title");
                _title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("title");
                OntitleChanged();
            }
        }
        private global::System.String _title;
        partial void OntitleChanging(global::System.String value);
        partial void OntitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String fileName
        {
            get
            {
                return _fileName;
            }
            set
            {
                OnfileNameChanging(value);
                ReportPropertyChanging("fileName");
                _fileName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("fileName");
                OnfileNameChanged();
            }
        }
        private global::System.String _fileName;
        partial void OnfileNameChanging(global::System.String value);
        partial void OnfileNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GalleryModel", "FK_Comments_Photos", "Comments")]
        public EntityCollection<Comments> Comments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Comments>("GalleryModel.FK_Comments_Photos", "Comments");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Comments>("GalleryModel.FK_Comments_Photos", "Comments", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
